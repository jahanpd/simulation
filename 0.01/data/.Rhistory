print "hello"
print ("hello")
A = [1 2 ; 3 4 ; 4 5]
iris
names(iris)
library(ggplot2)
path.1 = "~/Documents/Hackz/Simulation/1"
path.0.4 = "~/Documents/Hackz/Simulation/0.4"
path.0.1 = "~/Documents/Hackz/Simulation/0.1"
path.0.01 = "~/Documents/Hackz/Simulation/0.01"
wds = c(path.1, path.0.4, path.0.1, path.0.01)
library(ggplot2)
path.1 = "~/Documents/Hackz/Simulation/1/data"
path.0.4 = "~/Documents/Hackz/Simulation/0.4/data"
path.0.1 = "~/Documents/Hackz/Simulation/0.1/data"
path.0.01 = "~/Documents/Hackz/Simulation/0.01/data"
# PR = 1
setwd(path.1)
iters.avg.1 <- c()
iters.std.1 <- c()
file.names <- dir(path.1, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1001)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.1[n] <- mean(data)
iters.std.1[n] <- sd(data)
}
}
#PR 0.4 data
setwd(path.0.4)
iters.avg.0.4 <- c()
iters.std.0.4 <- c()
file.names <- dir(path.0.4, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1001)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.4[n] <- mean(data)
iters.std.0.4[n] <- sd(data)
}
}
#PR 0.1 data
setwd(path.0.1)
iters.avg.0.1 <- c()
iters.std.0.1 <- c()
file.names <- dir(path.0.1, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1001)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.1[n] <- mean(data)
iters.std.0.1[n] <- sd(data)
}
}
#PR 0.01 data
setwd(path.0.01)
iters.avg.0.01 <- c()
iters.std.0.01 <- c()
file.names <- dir(path.0.01, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1001)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.01[n] <- mean(data)
iters.std.0.01[n] <- sd(data)
}
}
plot(iters.avg.1, type="l", ylim=c(50,90), col="red")
lines(iters.avg.0.4, col="green")
lines(iters.avg.0.1, col="blue")
lines(iters.avg.0.01, col="yellow")
library(ggplot2)
path.1 = "~/Documents/Hackz/Simulation/1/data"
path.0.4 = "~/Documents/Hackz/Simulation/0.4/data"
path.0.1 = "~/Documents/Hackz/Simulation/0.1/data"
path.0.01 = "~/Documents/Hackz/Simulation/0.01/data"
# PR = 1
setwd(path.1)
iters.avg.1 <- c()
iters.std.1 <- c()
file.names <- dir(path.1, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1002)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.1[n] <- mean(data)
iters.std.1[n] <- sd(data)
}
}
#PR 0.4 data
setwd(path.0.4)
iters.avg.0.4 <- c()
iters.std.0.4 <- c()
file.names <- dir(path.0.4, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1002)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.4[n] <- mean(data)
iters.std.0.4[n] <- sd(data)
}
}
#PR 0.1 data
setwd(path.0.1)
iters.avg.0.1 <- c()
iters.std.0.1 <- c()
file.names <- dir(path.0.1, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1002)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.1[n] <- mean(data)
iters.std.0.1[n] <- sd(data)
}
}
#PR 0.01 data
setwd(path.0.01)
iters.avg.0.01 <- c()
iters.std.0.01 <- c()
file.names <- dir(path.0.01, pattern ="statsRateAvg")
number.files <- length(file.names)
matrix.iters <- matrix(NA,number.files,1002)
for (i in 1:number.files) {
temp <- read.table(file.names[i],
header = FALSE,
sep=",",
colClasses = "numeric")
temp <- as.matrix(temp)
matrix.iters[i,1:length(temp)] = temp
}
for (n in 1:1000) {
data <- matrix.iters[1:number.files,n]
data <- data[is.na(data) == FALSE]
if (is.numeric(mean(data))) {
iters.avg.0.01[n] <- mean(data)
iters.std.0.01[n] <- sd(data)
}
}
plot(iters.avg.1, type="l", ylim=c(50,90), col="red")
lines(iters.avg.0.4, col="green")
lines(iters.avg.0.1, col="blue")
lines(iters.avg.0.01, col="yellow")
plot(iters.avg.1, type="l", ylim=c(50,90), col="red", )
lines(iters.avg.0.4, col="green")
lines(iters.avg.0.1, col="blue")
lines(iters.avg.0.01, col="yellow")
title(xlab="Iteration", ylab="Lifespan", main="Average lifespan over time")
text(locator(), labels = c("0.01", "0.1", "0.4", "1"))
plot(iters.avg.1, type="l", ylim=c(50,90), col="red", xlab="", ylab="", main="")
lines(iters.avg.0.4, col="green")
lines(iters.avg.0.1, col="blue")
lines(iters.avg.0.01, col="yellow")
title(xlab="Iteration", ylab="Lifespan", main="Average lifespan over time")
text(locator(), labels = c("0.01", "0.1", "0.4", "1"))
